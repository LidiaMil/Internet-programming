{"ast":null,"code":"import { ADD_COMMENT, SET_COMMENT, DEL_COMMENT, EDIT_COMMENT, COUNT_COMMENT, SET_COMMENTINFO } from '../types';\nimport axios from \"axios\"; //GET COMMENT\n\nexport const getComment = postId => async dispatch => {\n  const response = await axios.get(`http://localhost:3000/interview/comment/info/${postId}`);\n  dispatch(setComment(response.data));\n};\nexport const setComment = comments => ({\n  type: SET_COMMENT,\n  payload: {\n    comments\n  }\n}); //ADD COMMENT\n\nexport const addComment = (postId, idUser, newCom) => async dispatch => {\n  const response = await axios.post(`http://localhost:3000/interview/comment/${postId}/${idUser}`, newCom);\n  dispatch(setAddComment(response.data));\n};\nexport const setAddComment = newComment => ({\n  type: ADD_COMMENT,\n  payload: {\n    newComment\n  }\n}); //DELETE COMMENT\n\nexport const deleteComment = (post, id) => async dispatch => {\n  const response = await axios.delete(`http://localhost:3000/interview/comment/${id}/${post}`);\n  dispatch(setdeleteComment(response.data));\n};\nexport const setdeleteComment = id => ({\n  type: DEL_COMMENT,\n  payload: id\n}); //EDIT COMMENT\n\nexport const editComment = (postId, id, editCom) => async dispatch => {\n  const response = await axios.post(`http://localhost:3001/interview/comment/${postId}/${id}`, editCom);\n  dispatch(seteditComment(response.data));\n};\nexport const seteditComment = changedPost => ({\n  type: EDIT_COMMENT,\n  payload: {\n    changedPost\n  }\n}); //COUNT COMMENT\n\nexport const countCommentQuestion = postId => async dispatch => {\n  const response = await axios.patch(`http://localhost:3000/interview/comment/${postId}`);\n  dispatch(setcountCommentQuestion(response.data));\n};\nexport const setcountCommentQuestion = countComment => ({\n  type: COUNT_COMMENT,\n  payload: {\n    countComment\n  }\n}); //INFO COMMENT\n\nexport const commentInfoAction = id => async dispatch => {\n  const response = await axios.get(`http://localhost:3000/interview/comment/info/${id}`);\n  dispatch(setcommentInfo(response.data));\n};\nexport const setcommentInfo = commentInfo => ({\n  type: SET_COMMENTINFO,\n  payload: {\n    commentInfo\n  }\n});","map":{"version":3,"sources":["/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/redux/actions/comment.action.js"],"names":["ADD_COMMENT","SET_COMMENT","DEL_COMMENT","EDIT_COMMENT","COUNT_COMMENT","SET_COMMENTINFO","axios","getComment","postId","dispatch","response","get","setComment","data","comments","type","payload","addComment","idUser","newCom","post","setAddComment","newComment","deleteComment","id","delete","setdeleteComment","editComment","editCom","seteditComment","changedPost","countCommentQuestion","patch","setcountCommentQuestion","countComment","commentInfoAction","setcommentInfo","commentInfo"],"mappings":"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","sourcesContent":["import { ADD_COMMENT,SET_COMMENT,DEL_COMMENT,EDIT_COMMENT, COUNT_COMMENT, SET_COMMENTINFO} from '../types'\nimport axios from \"axios\";\n\n//GET COMMENT\nexport const getComment = (postId) => async (dispatch) => {\n  const response = await axios.get(`http://localhost:3000/interview/comment/info/${postId}`)\n\n  dispatch(setComment(response.data))\n}\nexport const setComment = (comments)=>({\n  type:SET_COMMENT,\n  payload: {comments}, \n})\n\n//ADD COMMENT\nexport const addComment = (postId,idUser,newCom) => async (dispatch) => {\n  const response = await axios.post(`http://localhost:3000/interview/comment/${postId}/${idUser}`,newCom)\n  dispatch(setAddComment(response.data))\n}\nexport const setAddComment = (newComment)=> ({\n  type: ADD_COMMENT,\n  payload: {newComment},\n})\n\n//DELETE COMMENT\nexport const deleteComment = (post,id) => async (dispatch) => {\n  const response = await axios.delete(`http://localhost:3000/interview/comment/${id}/${post}`)\n  dispatch(setdeleteComment(response.data))\n}\nexport const setdeleteComment = (id)=> ({\n  type:DEL_COMMENT,\n  payload: id,\n})\n\n//EDIT COMMENT\nexport const editComment = (postId,id,editCom) => async (dispatch) => {\n  const response = await axios.post( `http://localhost:3001/interview/comment/${postId}/${id}`,editCom)\n  dispatch(seteditComment(response.data))\n}\nexport const seteditComment = (changedPost)=> ({\n  type:EDIT_COMMENT,\n  payload: {changedPost},\n})\n\n//COUNT COMMENT\nexport const countCommentQuestion = (postId) => async (dispatch) => {\n  const response = await axios.patch( `http://localhost:3000/interview/comment/${postId}`)\n  dispatch(setcountCommentQuestion(response.data))\n}\nexport const setcountCommentQuestion = (countComment)=> ({\n  type:COUNT_COMMENT,\n  payload: {countComment},\n})\n\n//INFO COMMENT\nexport const commentInfoAction = (id) => async (dispatch) => {\n  const response = await axios.get( `http://localhost:3000/interview/comment/info/${id}`)\n  dispatch(setcommentInfo(response.data))\n}\nexport const setcommentInfo = (commentInfo)=> ({\n  type:SET_COMMENTINFO,\n  payload: {commentInfo},\n})\n"]},"metadata":{},"sourceType":"module"}