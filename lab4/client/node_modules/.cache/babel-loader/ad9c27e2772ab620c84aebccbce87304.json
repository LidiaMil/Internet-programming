{"ast":null,"code":"var _jsxFileName = \"/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/components/More/More.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { Button, styled, Grid, div, Box, Avatar, Paper, ButtonBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from \"react\";\nimport { getOneQuestion } from '../../redux/actions/oneQuest.action';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Comment from '../Comment/Comment';\nimport { getComment, addComment } from '../../redux/actions/comment.action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800\n  }\n});\nexport default function ImgMediadiv() {\n  _s();\n\n  const classes = useStyles();\n  const [newComment, setNewComment] = useState(null);\n  const postId = useParams();\n  const dispatch = useDispatch();\n  const idUser = Number(localStorage.getItem('user_id'));\n  const comments = useSelector(state => state.comments);\n  const oneQuestion = useSelector(state => state.oneQuestion);\n  const oneUser = useSelector(state => state.user.currentUser.firstName);\n  useEffect(() => {\n    dispatch(getOneQuestion(postId.id));\n    dispatch(getComment(postId.id));\n  }, []);\n  let arrLang = [];\n\n  if (oneQuestion.Languages) {\n    for (let i = 0; i < oneQuestion.Languages.length; i++) {\n      arrLang.push(oneQuestion.Languages[i].programmingLanguage);\n    }\n  }\n\n  const handleSubmitAdd = event => {\n    event.preventDefault();\n    dispatch(addComment(postId.id, idUser, {\n      text: comments.text,\n      Users: oneUser\n    }));\n    setNewComment(null);\n  };\n\n  const textAdd = event => {\n    comments.text = event.target.value;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"job-card shadow border-radius\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"job-main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"job-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: [\"\\u042F\\u0437\\u044B\\u043A \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044F: \", arrLang.join(' ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: [\"\\u0412\\u043E\\u043F\\u0440\\u043E\\u0441: \", oneQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          variant: \"body2\",\n          color: \"textSecondary\",\n          component: \"p\",\n          children: postId === newComment ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmitAdd,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label\",\n                  for: \"name\",\n                  children: \"\\u0422\\u0432\\u043E\\u0439 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"name\",\n                  required: \"\",\n                  \"v-model\": \"name\",\n                  onChange: textAdd\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"search-buttons card-buttons\",\n                  children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n            direction: \"row\",\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => setNewComment(postId),\n              variant: \"contained\",\n              children: \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: comments && comments.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Comment, { ...item,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 93\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 56\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ImgMediadiv, \"nJRe8/Hg0qdS/ibpycJOY72zVU8=\", false, function () {\n  return [useStyles, useParams, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ImgMediadiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImgMediadiv\");","map":{"version":3,"sources":["/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/components/More/More.jsx"],"names":["React","Button","styled","Grid","div","Box","Avatar","Paper","ButtonBase","makeStyles","useEffect","useState","getOneQuestion","useDispatch","useSelector","useParams","Comment","getComment","addComment","useStyles","root","maxWidth","ImgMediadiv","classes","newComment","setNewComment","postId","dispatch","idUser","Number","localStorage","getItem","comments","state","oneQuestion","oneUser","user","currentUser","firstName","id","arrLang","Languages","i","length","push","programmingLanguage","handleSubmitAdd","event","preventDefault","text","Users","textAdd","target","value","join","map","item","index"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Button, styled, Grid, div, Box, Avatar, Paper, ButtonBase } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from \"react\"\nimport { getOneQuestion } from '../../redux/actions/oneQuest.action'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\"\nimport Comment from '../Comment/Comment'\nimport { getComment, addComment } from '../../redux/actions/comment.action'\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 800,\n  },\n});\n\nexport default function ImgMediadiv() {\n  const classes = useStyles();\n  const [newComment, setNewComment] = useState(null);\n  const postId = useParams()\n  const dispatch = useDispatch()\n  const idUser = Number(localStorage.getItem('user_id'))\n  const comments = useSelector((state) => state.comments)\n  const oneQuestion = useSelector((state) => state.oneQuestion)\n  const oneUser = useSelector((state) => state.user.currentUser.firstName)\n\n  useEffect(() => {\n    dispatch(getOneQuestion(postId.id))\n    dispatch(getComment(postId.id))\n  }, [])\n\n  let arrLang = [];\n  if (oneQuestion.Languages) {\n    for (let i = 0; i < oneQuestion.Languages.length; i++) {\n      arrLang.push(oneQuestion.Languages[i].programmingLanguage)\n    }\n  }\n\n  const handleSubmitAdd = (event) => {\n    event.preventDefault()\n    dispatch(addComment(\n      postId.id,\n      idUser,\n      {\n        text: comments.text,\n        Users: oneUser\n      }))\n    setNewComment(null);\n  }\n\n  const textAdd = (event) => {\n\n    comments.text = event.target.value\n  }\n\n  return (\n    <>\n      <div className=\"job-card shadow border-radius\">\n        <div className=\"job-main\">\n          <div className=\"job-content\">\n            <div gutterBottom variant=\"h5\" component=\"h2\">\n              Язык программирования: {arrLang.join(' ')}\n            </div>\n            <div variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Вопрос: {oneQuestion.text}\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {postId === newComment ? (\n              <>\n                <form onSubmit={handleSubmitAdd} >\n                  <div>\n                    <label className=\"label\" for=\"name\">Твой комментарий:</label>\n                    <input type=\"text\" id=\"name\" required=\"\" v-model=\"name\" onChange={textAdd} />\n                    <button type=\"submit\" className=\"search-buttons card-buttons\">Опубликовать</button>\n                  </div>\n                </form>\n              </>\n            ) : (\n              <div direction=\"row\" spacing={2}>\n                <Button onClick={() => setNewComment(postId)} variant=\"contained\"> Добавить комментарий</Button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className={classes.root}>\n          <div>\n            {comments && comments.map((item, index) => <div className=\"col-4\" key={item.id}><Comment {...item} index={index} /></div>)}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}