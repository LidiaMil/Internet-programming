{"ast":null,"code":"import axios from \"axios\";\nimport { SET_QUESTION, ADD_INTERVIEW, SET_FILTER } from '../types';\nexport const getInterview = () => async (dispatch, getState) => {\n  const response = await axios.get(\"http://localhost:3000/interview\");\n  dispatch(setInterview(response.data));\n};\nexport const setInterview = question => ({\n  type: SET_QUESTION,\n  payload: {\n    question\n  }\n});\nexport const addInterview = newCom => async (dispatch, getState) => {\n  const response = await axios.post(`http://localhost:3000/interview/new`, newCom);\n  dispatch(setAddInterview(response.data));\n};\nexport const setAddInterview = newInterview => ({\n  type: ADD_INTERVIEW,\n  payload: {\n    newInterview\n  }\n});\nexport const filterInterview = cat => async (dispatch, getState) => {\n  const response = await axios.post(\"http://localhost:3000/interview/filter\", cat);\n  dispatch(setFilterInterview(response.data));\n};\nexport const setFilterInterview = filter => ({\n  type: SET_FILTER,\n  payload: {\n    filter\n  }\n});","map":{"version":3,"sources":["/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/redux/actions/interview.action.js"],"names":["axios","SET_QUESTION","ADD_INTERVIEW","SET_FILTER","getInterview","dispatch","getState","response","get","setInterview","data","question","type","payload","addInterview","newCom","post","setAddInterview","newInterview","filterInterview","cat","setFilterInterview","filter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAsBC,aAAtB,EAAoCC,UAApC,QAAqD,UAArD;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC9D,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,iCAAV,CAAvB;AACAH,EAAAA,QAAQ,CAACI,YAAY,CAACF,QAAQ,CAACG,IAAV,CAAb,CAAR;AACD,CAHM;AAIP,OAAO,MAAMD,YAAY,GAAIE,QAAD,KAAe;AACzCC,EAAAA,IAAI,EAAEX,YADmC;AAEzCY,EAAAA,OAAO,EAAE;AAAEF,IAAAA;AAAF;AAFgC,CAAf,CAArB;AAKP,OAAO,MAAMG,YAAY,GAAIC,MAAD,IAAY,OAAOV,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAN,CAAY,qCAAZ,EAAiDD,MAAjD,CAAvB;AACAV,EAAAA,QAAQ,CAACY,eAAe,CAACV,QAAQ,CAACG,IAAV,CAAhB,CAAR;AACD,CAHM;AAIP,OAAO,MAAMO,eAAe,GAAIC,YAAD,KAAmB;AAChDN,EAAAA,IAAI,EAAEV,aAD0C;AAEhDW,EAAAA,OAAO,EAAE;AAAEK,IAAAA;AAAF;AAFuC,CAAnB,CAAxB;AAKP,OAAO,MAAMC,eAAe,GAAIC,GAAD,IAAS,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;AACpE,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAN,CAAW,wCAAX,EAAoDI,GAApD,CAAvB;AACAf,EAAAA,QAAQ,CAACgB,kBAAkB,CAAEd,QAAQ,CAACG,IAAX,CAAnB,CAAR;AACD,CAHM;AAIP,OAAO,MAAMW,kBAAkB,GAAIC,MAAD,KAAa;AAC7CV,EAAAA,IAAI,EAAET,UADuC;AAE7CU,EAAAA,OAAO,EAAE;AAAES,IAAAA;AAAF;AAFoC,CAAb,CAA3B","sourcesContent":["import axios from \"axios\";\nimport { SET_QUESTION,ADD_INTERVIEW,SET_FILTER} from '../types'\n\nexport const getInterview = () => async (dispatch, getState) => {\n  const response = await axios.get(\"http://localhost:3000/interview\")\n  dispatch(setInterview(response.data))\n}\nexport const setInterview = (question) => ({\n  type: SET_QUESTION,\n  payload: { question }\n})\n\nexport const addInterview = (newCom) => async (dispatch, getState) => {\n  const response = await axios.post(`http://localhost:3000/interview/new`,newCom)\n  dispatch(setAddInterview(response.data))\n}\nexport const setAddInterview = (newInterview) => ({\n  type: ADD_INTERVIEW,\n  payload: { newInterview }\n})\n\nexport const filterInterview = (cat) => async (dispatch, getState) => {\n  const response = await axios.post(\"http://localhost:3000/interview/filter\",cat)\n  dispatch(setFilterInterview (response.data))\n}\nexport const setFilterInterview = (filter) => ({\n  type: SET_FILTER,\n  payload: { filter }\n})\n"]},"metadata":{},"sourceType":"module"}