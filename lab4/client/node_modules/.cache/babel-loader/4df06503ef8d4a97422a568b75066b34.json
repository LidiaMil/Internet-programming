{"ast":null,"code":"import axios from \"axios\";\nimport { SET_ORG, SET_ERROR } from '../types'; // middleware\n\nexport const getOrg = () => async (dispatch, getState) => {\n  try {\n    const response = await axios.get('http://localhost:3000/organizations');\n    const arr = response.data;\n    let arrNum = arr.map(i => {\n      if (!i.Raitings) {\n        i.result = 0;\n      }\n\n      i.result = i.Raitings.reduce((acc, el) => acc += el.number, 0) / i.Raitings.length;\n      return i;\n    });\n    dispatch(setOrganizations(arrNum));\n  } catch (error) {\n    dispatch(setError(error));\n  }\n}; // actionCreaters\n\nexport const setOrganizations = organization => ({\n  type: SET_ORG,\n  payload: {\n    organization\n  }\n});\nexport const setError = error => ({\n  type: SET_ERROR,\n  error\n});","map":{"version":3,"sources":["/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/redux/actions/organization.action.js"],"names":["axios","SET_ORG","SET_ERROR","getOrg","dispatch","getState","response","get","arr","data","arrNum","map","i","Raitings","result","reduce","acc","el","number","length","setOrganizations","error","setError","organization","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,UAAnC,C,CAGA;;AACA,OAAO,MAAMC,MAAM,GAAG,MAAM,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACxD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,qCAAV,CAAvB;AACA,UAAMC,GAAG,GAAGF,QAAQ,CAACG,IAArB;AACA,QAAIC,MAAM,GAAGF,GAAG,CAACG,GAAJ,CAASC,CAAD,IAAO;AAC1B,UAAG,CAACA,CAAC,CAACC,QAAN,EAAe;AACbD,QAAAA,CAAC,CAACE,MAAF,GAAW,CAAX;AACD;;AACDF,MAAAA,CAAC,CAACE,MAAF,GAAWF,CAAC,CAACC,QAAF,CAAWE,MAAX,CAAkB,CAACC,GAAD,EAAMC,EAAN,KAAaD,GAAG,IAAIC,EAAE,CAACC,MAAzC,EAAiD,CAAjD,IAAuDN,CAAC,CAACC,QAAF,CAAWM,MAA7E;AACA,aAAOP,CAAP;AACD,KANY,CAAb;AAQAR,IAAAA,QAAQ,CAACgB,gBAAgB,CAACV,MAAD,CAAjB,CAAR;AAED,GAbD,CAaE,OAAOW,KAAP,EAAc;AACdjB,IAAAA,QAAQ,CAACkB,QAAQ,CAACD,KAAD,CAAT,CAAR;AACD;AACF,CAjBM,C,CAkBP;;AACA,OAAO,MAAMD,gBAAgB,GAAIG,YAAD,KAAmB;AACjDC,EAAAA,IAAI,EAAEvB,OAD2C;AAEjDwB,EAAAA,OAAO,EAAE;AAAEF,IAAAA;AAAF;AAFwC,CAAnB,CAAzB;AAMP,OAAO,MAAMD,QAAQ,GAAID,KAAD,KAAY;AAClCG,EAAAA,IAAI,EAAEtB,SAD4B;AAElCmB,EAAAA;AAFkC,CAAZ,CAAjB","sourcesContent":["import axios from \"axios\";\nimport { SET_ORG, SET_ERROR } from '../types'\n\n\n// middleware\nexport const getOrg = () => async (dispatch, getState) => {\n  try {\n    const response = await axios.get('http://localhost:3000/organizations')\n    const arr = response.data\n    let arrNum = arr.map((i) => {\n      if(!i.Raitings){\n        i.result = 0\n      }\n      i.result = i.Raitings.reduce((acc, el) => acc += el.number, 0 ) / i.Raitings.length\n      return i\n    })\n\n    dispatch(setOrganizations(arrNum))\n\n  } catch (error) {\n    dispatch(setError(error))\n  }\n}\n// actionCreaters\nexport const setOrganizations = (organization) => ({\n  type: SET_ORG,\n  payload: { organization },\n\n})\n\nexport const setError = (error) => ({\n  type: SET_ERROR,\n  error\n})\n\n\n"]},"metadata":{},"sourceType":"module"}