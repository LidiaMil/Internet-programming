{"ast":null,"code":"import { SET_IMG, SET_NICKNAME, GET_MY_INTERVIEWS, CLEAR_MY_INTERVIEWS, DELETE_MY_INTERVIEW, GET_MY_INTERVIEW_FOR_FORM, GET_MY_FAV_INTERVIEWS } from \"../types\";\nimport axios from \"axios\";\nimport { setImg } from \"../reducers/userauth.reducer\"; /////////  NICKNAME  ////////\n\nexport const setNicknameProfile = formData => dispatch => {\n  fetch(\"http://localhost:3000/edit/upload\", {\n    method: 'POST',\n    body: formData\n  }).then(result => result.json()).then(data => dispatch(setImg(data.firstName, data.photo)));\n};\nexport const setNickname = (nickname, img) => ({\n  type: SET_NICKNAME,\n  payload: {\n    nickname,\n    img\n  }\n}); /////// INTERVIEWS  ////////\n\nexport const getMyInterviews = id => dispatch => {\n  fetch(`http://localhost:3000/edit/getusersposts/${id}`).then(result => result.json()).then(data => dispatch(getInterviews(data)));\n};\nexport const getInterviews = data => ({\n  type: GET_MY_INTERVIEWS,\n  payload: data\n}); //favorite\n\nexport const getMyFavoriteInterviews = () => async (dispatch, getState) => {\n  const response = await axios.get(`http://localhost:3000/interview/favorite`);\n  dispatch(getFavoriteInterviews(response.data));\n};\nexport const getFavoriteInterviews = favInterviews => ({\n  type: GET_MY_FAV_INTERVIEWS,\n  payload: {\n    favInterviews\n  }\n});\nexport const clearMyInterviews = () => ({\n  type: CLEAR_MY_INTERVIEWS,\n  payload: []\n});\nexport const deleteMyInterview = id => dispatch => {\n  fetch(`http://localhost:3000/edit/interview/${id}`, {\n    method: 'DELETE'\n  }).then(dispatch(delInterview(id)));\n};\nexport const delInterview = id => ({\n  type: DELETE_MY_INTERVIEW,\n  payload: id\n});\nexport const editMyInterview = id => dispatch => {\n  fetch(`http://localhost:3000/edit/datainterview/${id}`).then(data => dispatch(editInterview(data)));\n};\nexport const editInterview = data => ({\n  type: GET_MY_INTERVIEW_FOR_FORM,\n  payload: data\n});","map":{"version":3,"sources":["/Users/lidiiamiloserdova/Internet-programming/lab4/Interview-in-IT/client/src/redux/actions/editProfile.action.js"],"names":["SET_IMG","SET_NICKNAME","GET_MY_INTERVIEWS","CLEAR_MY_INTERVIEWS","DELETE_MY_INTERVIEW","GET_MY_INTERVIEW_FOR_FORM","GET_MY_FAV_INTERVIEWS","axios","setImg","setNicknameProfile","formData","dispatch","fetch","method","body","then","result","json","data","firstName","photo","setNickname","nickname","img","type","payload","getMyInterviews","id","getInterviews","getMyFavoriteInterviews","getState","response","get","getFavoriteInterviews","favInterviews","clearMyInterviews","deleteMyInterview","delInterview","editMyInterview","editInterview"],"mappings":"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","sourcesContent":["import {\n  SET_IMG, SET_NICKNAME, GET_MY_INTERVIEWS, CLEAR_MY_INTERVIEWS,\n  DELETE_MY_INTERVIEW, GET_MY_INTERVIEW_FOR_FORM, GET_MY_FAV_INTERVIEWS\n} from \"../types\"\nimport axios from \"axios\";\nimport { setImg } from \"../reducers/userauth.reducer\";\n\n/////////  NICKNAME  ////////\nexport const setNicknameProfile = (formData) => (dispatch) => {\n\n  fetch(\"http://localhost:3000/edit/upload\", {\n    method: 'POST',\n    body: formData,\n  }).then(result => result.json())\n    .then(data => dispatch(setImg(data.firstName, data.photo)))\n}\nexport const setNickname = (nickname, img) => ({\n  type: SET_NICKNAME,\n  payload: { nickname, img }\n})\n\n/////// INTERVIEWS  ////////\n\nexport const getMyInterviews = (id) => (dispatch) => {\n  fetch(`http://localhost:3000/edit/getusersposts/${id}`)\n    .then(result => result.json())\n    .then(data => dispatch(getInterviews(data)))\n}\nexport const getInterviews = (data) => ({\n  type: GET_MY_INTERVIEWS,\n  payload: data\n})\n\n\n//favorite\nexport const getMyFavoriteInterviews = () => async (dispatch, getState) => {\n  const response = await axios.get(`http://localhost:3000/interview/favorite`)\n  dispatch(getFavoriteInterviews(response.data))\n}\nexport const getFavoriteInterviews = (favInterviews) => ({\n  type: GET_MY_FAV_INTERVIEWS,\n  payload: { favInterviews }\n})\n\nexport const clearMyInterviews = () => ({\n  type: CLEAR_MY_INTERVIEWS,\n  payload: []\n})\n\n\nexport const deleteMyInterview = (id) => (dispatch) => {\n  fetch(`http://localhost:3000/edit/interview/${id}`, {\n    method: 'DELETE',\n  })\n    .then(dispatch(delInterview(id)))\n\n}\nexport const delInterview = (id) => ({\n  type: DELETE_MY_INTERVIEW,\n  payload: id\n})\n\n\n\nexport const editMyInterview = (id) => (dispatch) => {\n  fetch(`http://localhost:3000/edit/datainterview/${id}`)\n    .then(data => dispatch(editInterview(data)))\n\n}\nexport const editInterview = (data) => ({\n  type: GET_MY_INTERVIEW_FOR_FORM,\n  payload: data\n})\n"]},"metadata":{},"sourceType":"module"}